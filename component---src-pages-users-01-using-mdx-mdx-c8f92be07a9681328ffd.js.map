{"version":3,"file":"component---src-pages-users-01-using-mdx-mdx-c8f92be07a9681328ffd.js","mappings":"6QAQaA,EAAe,CAC1B,KAAQ,mBACR,MAAS,YACT,IAAO,QAEHC,EAAc,CAClBD,aAAAA,GAGa,SAASE,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SALS,WAKT,UAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,mBAAG,cAAGC,WAAW,IACb,KAAQ,qBADT,OAAH,gEAGA,8PAGA,+GACA,SAAC,IAAD,CAAYC,UAAW,EAAGF,QAAQ,cAAlC,qDAGA,4FACA,gBACE,UAAa,mBACb,gBAAiB,eAChB,gBAAKC,WAAW,MACf,UAAa,wBACZ,iBAAMA,WAAW,MAChB,UAAa,wBACZ,iBAAMA,WAAW,OAChB,UAAa,iBADd,UAFF,KAI0B,iBAAMA,WAAW,OACxC,UAAa,qBADU,KAJ1B,eAM+B,iBAAMA,WAAW,OAC7C,UAAa,qBADe,KAN/B,2BAQ2C,iBAAMA,WAAW,OACzD,UAAa,qBAD2B,KAR3C,KAUqB,iBAAMA,WAAW,OACnC,UAAa,iBADK,QAVrB,KAYwB,iBAAMA,WAAW,OACtC,UAAa,gBADQ,8BAG7B,4BACE,cAAGA,WAAW,cAAd,uDAAkF,eAAIA,WAAW,KAAf,eAAlF,sBAEF,SAAC,IAAD,CAAuBD,QAAQ,2BAC/B,4BACE,cAAGC,WAAW,cAAd,mMACwF,eAAIA,WAAW,KAAf,iBADxF,yCAQNJ,EAAWM,gBAAiB","sources":["webpack://confluenza-solo/./src/pages/users/01-UsingMDX.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { WithBorder, ImportingMDXDocuments } from '../../components/mdx';\nexport const _frontmatter = {\n  \"path\": \"/users/using-mdx\",\n  \"title\": \"Using MDX\",\n  \"tag\": \"user\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://mdxjs.com\"\n      }}>{`MDX`}</a>{` allows you to use JSX directly in your Markdown documents.`}</p>\n    <p>{`Imagine, you are documenting a component. Wouldn't it be nice to actually show a working component\ndirectly in your Markdown document? I mean, not a screenshot, or code snippet, but real rendered\ncomponent. MDX makes it possible.`}</p>\n    <p>{`Below you see a component that renders its content with a border of the given thickness.`}</p>\n    <WithBorder thickness={5} mdxType=\"WithBorder\">\n  This text should appear in a border `5px` thick.\n    </WithBorder>\n    <p>{`This component is imported as any other regular react component with:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-javascript\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`import`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` WithBorder`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` ImportingMDXDocuments `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`from`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'../../components/mdx'`}</span></code></pre></div>\n    <blockquote>\n      <p parentName=\"blockquote\">{`The import statement must be placed directly after `}<em parentName=\"p\">{`frontmatter`}</em>{` if one is used.`}</p>\n    </blockquote>\n    <ImportingMDXDocuments mdxType=\"ImportingMDXDocuments\" />\n    <blockquote>\n      <p parentName=\"blockquote\">{`In this file, as an example, we show that you can import React components and other MDX documents\nfrom any location in your source three. In some cases though, it may be better to keep your `}<em parentName=\"p\">{`documentation`}</em>{`\ncomponents in the same workspace.`}</p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","thickness","isMDXComponent"],"sourceRoot":""}